# This is a basic workflow to help you get started with Actions

name: docker installation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 
  # push:
  #   branches:
  #     - main
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      # Clone another repository (Private or Public)
      - name: Clone another repository
        env:
          GH_PAT: ${{ secrets.GH_PAT }}  # Personal Access Token (PAT) stored as a secret
        run: |
          # Configure git to use the PAT for authentication
          git config --global url."https://$GH_PAT@github.com/".insteadOf "https://github.com/"
                  
          sudo mkdir -p private_repo
          cd private_repo
          
          # Now clone the other repository (change this to the repository you want to clone)
          git clone https://github.com/aman7433/private-repo-for-cicd.git

          ls private_repo


      # Runs a single command using the runners shell
      - name: Decode and Use EC2 Private Key
        env:
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          echo "$EC2_PRIVATE_KEY" > main_key.pem
          chmod 400 main_key.pem
      - name: Install docker on EC2
        env:
           EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H $EC2_PUBLIC_IP >> ~/.ssh/known_hosts
          ssh -i "main_key.pem" ubuntu@$EC2_PUBLIC_IP << EOF
          sudo apt update -y
          sudo docker pull postgres
          EOF
